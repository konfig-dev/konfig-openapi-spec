info:
  version: 1.0.0
  title: Konfig REST API
  description: To help you generate SDKs with Konfig
  contact:
    url: https://konfigthis.com
servers:
  - url: https://api.konfigthis.com
tags:
  - name: Linting
  - name: Specifications
  - name: SDK
openapi: 3.0.0
components:
  securitySchemes:
    authorization:
      name: authorization
      in: header
      type: apiKey
    session:
      name: session
      in: cookie
      type: apiKey
  schemas:
    GenerateRequestBody:
      type: object
      properties:
        spec:
          type: string
        konfigYaml:
          type: string
        outputSpec:
          type: boolean
        generators:
          type: object
          properties:
            android:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: &a1
                    host:
                      type: string
                    userId:
                      type: string
                    repoId:
                      type: string
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                groupId:
                  description: com.acme
                packageName:
                  description: acme
                artifactId:
                  description: ascme-java-sdk
              required:
                - version
                - git
                - outputDirectory
                - groupId
                - artifactId
              additionalProperties: false
            java:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                groupId:
                  description: com.acme
                packageName:
                  description: acme
                artifactId:
                  description: ascme-java-sdk
              required:
                - version
                - git
                - outputDirectory
                - groupId
                - artifactId
              additionalProperties: false
            ruby:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                moduleName:
                  type: string
              required:
                - version
                - git
                - outputDirectory
                - moduleName
              additionalProperties: false
            python:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                packageName:
                  description: acme_client
                projectName:
                  description: acme-python-sdk
                removeKonfigBranding:
                  type: boolean
                pypiApiTokenEnvironmentVariable:
                  type: string
                objectPropertyNamingConvention:
                  anyOf:
                    - type: string
                      enum:
                        - camelCase
                    - type: string
                      enum:
                        - snake_case
                  default: snake_case
                clientName:
                  type: string
                clientState:
                  type: array
                  items:
                    type: string
                setSkipSerializationToTrueByDefault:
                  type: boolean
                apiKeyAlias:
                  type: object
                  additionalProperties:
                    type: string
                validateRequiredStringsAreNonEmpty:
                  type: boolean
                packageUrl:
                  type: string
                topLevelOperations:
                  type: object
                  additionalProperties:
                    type: string
                generator:
                  anyOf:
                    - type: string
                      enum:
                        - python-prior
                    - type: string
                      enum:
                        - python
                  default: python
              required:
                - version
                - git
                - outputDirectory
                - packageName
                - projectName
                - clientName
              additionalProperties: false
            typescript:
              anyOf:
                - type: object
                  properties:
                    files:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          source:
                            type: string
                          destinationFilename:
                            type: string
                        required:
                          - source
                          - destinationFilename
                    version:
                      type: string
                    git:
                      type: object
                      properties: *a1
                    outputDirectory:
                      type: string
                    readmeSnippet:
                      type: string
                    readmeDescriptionSnippet:
                      type: string
                    apiDocumentationAuthenticationPartial:
                      type: string
                    disabled:
                      type: boolean
                    defaultTimeout:
                      type: number
                      default: 0
                    test:
                      type: object
                      properties:
                        script:
                          type: array
                          items:
                            type: string
                        requiredEnvironmentVariables:
                          type: array
                          items:
                            type: string
                      required:
                        - script
                    clientName:
                      type: string
                    npmName:
                      description: acme-typescript-sdk
                    pagination:
                      type: object
                      properties:
                        parameters:
                          type: array
                          items:
                            type: string
                        response:
                          type: array
                          items:
                            type: string
                      required:
                        - parameters
                        - response
                    clientState:
                      type: array
                      items:
                        type: string
                    removeRequiredProperties:
                      type: array
                      items:
                        type: string
                    topLevelOperations:
                      type: object
                      additionalProperties:
                        type: string
                    includeFetchAdapter:
                      type: boolean
                    includeEventSourceParser:
                      type: boolean
                  required:
                    - version
                    - git
                    - outputDirectory
                    - clientName
                    - npmName
                  additionalProperties: false
                - type: object
                  properties:
                    outputDirectory:
                      type: string
                    generatorVersion:
                      type: number
                      enum:
                        - 2
                    httpClient:
                      type: string
                      enum:
                        - fetch
                        - xhr
                        - node
                        - axios
                        - angular
                      default: fetch
                    useOptions:
                      type: boolean
                      default: true
                    useUnionTypes:
                      type: boolean
                      default: false
                    clientName:
                      description: AcmeClient
                    npmDescription:
                      description: SDK for Acme's REST API
                    npmAuthor:
                      description: acme.com
                    npmName:
                      description: acme-typescript-sdk
                    packageVersion:
                      type: string
                    parameterState:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          type:
                            anyOf:
                              - type: string
                                enum:
                                  - string
                              - type: string
                                enum:
                                  - boolean
                              - type: string
                                enum:
                                  - number
                        required:
                          - name
                          - type
                      minItems: 1
                    removeTagFromOperationId:
                      type: boolean
                    operationIdMapping:
                      type: object
                      additionalProperties:
                        type: string
                    pagination:
                      type: object
                      properties:
                        parameters:
                          type: array
                          items:
                            type: string
                        response:
                          type: array
                          items:
                            type: string
                      required:
                        - parameters
                        - response
                    test:
                      type: object
                      properties:
                        script:
                          type: array
                          items:
                            type: string
                        requiredEnvironmentVariables:
                          type: array
                          items:
                            type: string
                      required:
                        - script
                    git:
                      type: object
                      properties: *a1
                  required:
                    - outputDirectory
                    - generatorVersion
                    - npmDescription
                    - npmAuthor
                    - npmName
                    - packageVersion
                    - git
                  additionalProperties: false
            csharp:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                logoPath:
                  type: string
                packageName:
                  description: Acme.Net
              required:
                - version
                - git
                - outputDirectory
                - logoPath
                - packageName
              additionalProperties: false
            php:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                packageName:
                  description: acme-php
                invokerPackage:
                  type: string
              required:
                - version
                - git
                - outputDirectory
                - packageName
                - invokerPackage
              additionalProperties: false
            kotlin:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                groupId:
                  description: com.acme
                artifactId:
                  description: acme-kotlin-sdk
              required:
                - version
                - git
                - outputDirectory
                - groupId
                - artifactId
              additionalProperties: false
            objc:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                podName:
                  description: AcmeClient
                classPrefix:
                  description: A
                authorName:
                  description: acme.com
                authorEmail:
                  description: engineering@acme.com
              required:
                - version
                - git
                - outputDirectory
                - podName
                - classPrefix
                - authorName
                - authorEmail
              additionalProperties: false
            go:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                packageName:
                  description: acme
              required:
                - version
                - git
                - outputDirectory
                - packageName
              additionalProperties: false
            swift:
              type: object
              properties:
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      source:
                        type: string
                      destinationFilename:
                        type: string
                    required:
                      - source
                      - destinationFilename
                version:
                  type: string
                git:
                  type: object
                  properties: *a1
                outputDirectory:
                  type: string
                readmeSnippet:
                  type: string
                readmeDescriptionSnippet:
                  type: string
                apiDocumentationAuthenticationPartial:
                  type: string
                disabled:
                  type: boolean
                defaultTimeout:
                  type: number
                  default: 0
                test:
                  type: object
                  properties:
                    script:
                      type: array
                      items:
                        type: string
                    requiredEnvironmentVariables:
                      type: array
                      items:
                        type: string
                  required:
                    - script
                projectName:
                  description: Acme
                podAuthors:
                  description: acme.com
              required:
                - version
                - git
                - outputDirectory
                - projectName
                - podAuthors
              additionalProperties: false
        additionalGenerators:
          type: object
          additionalProperties:
            anyOf:
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - java
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  groupId:
                    description: com.acme
                  packageName:
                    description: acme
                  artifactId:
                    description: ascme-java-sdk
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - groupId
                  - artifactId
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - ruby
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  moduleName:
                    type: string
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - moduleName
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - android
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  groupId:
                    description: com.acme
                  packageName:
                    description: acme
                  artifactId:
                    description: ascme-java-sdk
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - groupId
                  - artifactId
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - python
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  version:
                    type: string
                  packageName:
                    type: string
                  projectName:
                    type: string
                  parameterState:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        type:
                          anyOf:
                            - type: string
                              enum:
                                - string
                            - type: string
                              enum:
                                - boolean
                            - type: string
                              enum:
                                - number
                      required:
                        - name
                        - type
                    minItems: 1
                  removeTagFromOperationId:
                    type: boolean
                  operationIdMapping:
                    type: object
                    additionalProperties:
                      type: string
                  pagination:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: string
                      response:
                        type: array
                        items:
                          type: string
                    required:
                      - parameters
                      - response
                  git:
                    type: object
                    properties: *a1
                required:
                  - generator
                  - outputDirectory
                  - version
                  - packageName
                  - projectName
                  - git
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - typescript
                  outputDirectory:
                    type: string
                  generatorVersion:
                    type: number
                    enum:
                      - 2
                  httpClient:
                    type: string
                    enum:
                      - fetch
                      - xhr
                      - node
                      - axios
                      - angular
                    default: fetch
                  useOptions:
                    type: boolean
                    default: true
                  useUnionTypes:
                    type: boolean
                    default: false
                  clientName:
                    description: AcmeClient
                  npmDescription:
                    description: SDK for Acme's REST API
                  npmAuthor:
                    description: acme.com
                  npmName:
                    description: acme-typescript-sdk
                  packageVersion:
                    type: string
                  parameterState:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        type:
                          anyOf:
                            - type: string
                              enum:
                                - string
                            - type: string
                              enum:
                                - boolean
                            - type: string
                              enum:
                                - number
                      required:
                        - name
                        - type
                    minItems: 1
                  removeTagFromOperationId:
                    type: boolean
                  operationIdMapping:
                    type: object
                    additionalProperties:
                      type: string
                  pagination:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: string
                      response:
                        type: array
                        items:
                          type: string
                    required:
                      - parameters
                      - response
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                required:
                  - generator
                  - outputDirectory
                  - generatorVersion
                  - npmDescription
                  - npmAuthor
                  - npmName
                  - packageVersion
                  - git
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - csharp
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  logoPath:
                    type: string
                  packageName:
                    description: Acme.Net
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - logoPath
                  - packageName
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - php
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  packageName:
                    description: acme-php
                  invokerPackage:
                    type: string
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - packageName
                  - invokerPackage
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - kotlin
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  groupId:
                    description: com.acme
                  artifactId:
                    description: acme-kotlin-sdk
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - groupId
                  - artifactId
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - objc
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  podName:
                    description: AcmeClient
                  classPrefix:
                    description: A
                  authorName:
                    description: acme.com
                  authorEmail:
                    description: engineering@acme.com
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - podName
                  - classPrefix
                  - authorName
                  - authorEmail
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - go
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  git:
                    type: object
                    properties: *a1
                  packageName:
                    description: acme
                required:
                  - generator
                  - outputDirectory
                  - version
                  - git
                  - packageName
                additionalProperties: false
              - type: object
                properties:
                  generator:
                    type: string
                    enum:
                      - swift
                  files:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        destinationFilename:
                          type: string
                      required:
                        - destinationFilename
                  version:
                    type: string
                  outputDirectory:
                    type: string
                  readmeSnippet:
                    type: string
                  readmeDescriptionSnippet:
                    type: string
                  apiDocumentationAuthenticationPartial:
                    type: string
                  disabled:
                    type: boolean
                  defaultTimeout:
                    type: number
                    default: 0
                  test:
                    type: object
                    properties:
                      script:
                        type: array
                        items:
                          type: string
                      requiredEnvironmentVariables:
                        type: array
                        items:
                          type: string
                    required:
                      - script
                  git:
                    type: object
                    properties: *a1
                  projectName:
                    description: Acme
                  podAuthors:
                    description: acme.com
                required:
                  - generator
                  - version
                  - outputDirectory
                  - git
                  - projectName
                  - podAuthors
                additionalProperties: false
        fixConfig:
          type: object
          properties:
            modify:
              type: object
              additionalProperties:
                oneOf: &a2
                  - type: string
                  - type: boolean
                  - type: number
                  - type: object
                nullable: true
            update:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  oneOf: *a2
                  nullable: true
        filterQueryParams:
          type: array
          items:
            type: string
        filterTags:
          type: array
          items:
            type: string
        filterModels:
          type: array
          items:
            type: string
        filterRequestBodies:
          type: array
          items:
            type: string
        attachNullabletoAllResponseSchemas:
          type: boolean
        validateRequiredPropertiesAreNonEmpty:
          type: boolean
        stripRequiredStringProperties:
          type: boolean
        infoContactEmail:
          type: string
        infoContactName:
          type: string
        validateSpec:
          type: boolean
        infoContactUrl:
          type: string
          format: uri
        takeFirstTag:
          description: Multiple tags can cause conflicts for TypeScript SDK
        removeDefaultArrayValues:
          description: Default array value is not supported in Java SDK
        convertArrayDataTypesToAny:
          description: Array data type is not supported in TypeScript SDK for OAS 3.1
        allObjectsHaveAdditionalProperties:
          anyOf:
            - type: boolean
            - type: object
              properties:
                requestBody:
                  type: boolean
                exclude:
                  type: array
                  items:
                    type: string
                include:
                  type: array
                  items:
                    type: string
                excludeGenerators:
                  type: array
                  items:
                    type: string
        requiredEnvironmentVariables:
          type: array
          items:
            type: string
      required:
        - spec
        - konfigYaml
        - generators
    GenerateResponseBody:
      type: object
      properties:
        urls:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              key:
                type: string
            required:
              - url
              - key
        generateConfigId:
          type: string
      required:
        - urls
        - generateConfigId
    LintRequestBody:
      type: object
      properties:
        spec:
          description: JSON or YAML string of your OpenAPI Specification
          example: >
            openapi: 3.0.0

            servers:
              - url: 'http://petstore.swagger.io/v2'
            info:
              version: 1.0.0
              title: OpenAPI Petstore
              license:
                name: Apache-2.0
                url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
            tags:
              - name: pet
                description: Everything about your Pets
              - name: store
                description: Access to Petstore orders
              - name: user
                description: Operations about user
            paths:
              /pet:
                post:
                  tags:
                    - pet
                  summary: Add a new pet to the store
                  description: ''
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '405':
                      description: Invalid input
                  security:
                    - petstore_auth:
                        - 'write:pets'
                      api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/Pet'
                put:
                  tags:
                    - pet
                  summary: Update an existing pet
                  description: ''
                  operationId: updatePet
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Pet not found
                    '405':
                      description: Validation exception
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    $ref: '#/components/requestBodies/Pet'
              /pet/findByStatus:
                get:
                  tags:
                    - pet
                  summary: Finds Pets by status
                  description: Multiple status values can be provided with comma separated strings
                  operationId: findPetsByStatus
                  parameters:
                    - name: status
                      in: query
                      description: Status values that need to be considered for filter
                      required: true
                      style: form
                      explode: false
                      deprecated: true
                      schema:
                        type: array
                        items:
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                          default: available
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid status value
                  security:
                    - petstore_auth:
                        - 'read:pets'
              /pet/findByTags:
                get:
                  tags:
                    - pet
                  summary: Finds Pets by tags
                  description: >-
                    Multiple tags can be provided with comma separated strings. Use tag1,
                    tag2, tag3 for testing.
                  operationId: findPetsByTags
                  parameters:
                    - name: tags
                      in: query
                      description: Tags to filter by
                      required: true
                      style: form
                      explode: false
                      schema:
                        type: array
                        items:
                          type: string
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid tag value
                  security:
                    - petstore_auth:
                        - 'read:pets'
                  deprecated: true
              '/pet/{petId}':
                get:
                  tags:
                    - pet
                  summary: Find pet by ID
                  description: Returns a single pet
                  operationId: getPetById
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet to return
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Pet not found
                  security:
                    - api_key: []
                post:
                  tags:
                    - pet
                  summary: Updates a pet in the store with form data
                  description: ''
                  operationId: updatePetWithForm
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet that needs to be updated
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '405':
                      description: Invalid input
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    content:
                      application/x-www-form-urlencoded:
                        schema:
                          type: object
                          properties:
                            name:
                              description: Updated name of the pet
                              type: string
                            status:
                              description: Updated status of the pet
                              type: string
                delete:
                  tags:
                    - pet
                  summary: Deletes a pet
                  description: ''
                  operationId: deletePet
                  parameters:
                    - name: api_key
                      in: header
                      required: false
                      schema:
                        type: string
                    - name: petId
                      in: path
                      description: Pet id to delete
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '400':
                      description: Invalid pet value
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
              '/pet/{petId}/uploadImage':
                post:
                  tags:
                    - pet
                  summary: uploads an image
                  description: ''
                  operationId: uploadFile
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet to update
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/ApiResponse'
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    content:
                      multipart/form-data:
                        schema:
                          type: object
                          properties:
                            additionalMetadata:
                              description: Additional data to pass to server
                              type: string
                            file:
                              description: file to upload
                              type: string
                              format: binary
              /store/inventory:
                get:
                  tags:
                    - store
                  summary: Returns pet inventories by status
                  description: Returns a map of status codes to quantities
                  operationId: getInventory
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/json:
                          schema:
                            type: object
                            additionalProperties:
                              type: integer
                              format: int32
                  security:
                    - api_key: []
              /store/order:
                post:
                  tags:
                    - store
                  summary: Place an order for a pet
                  description: ''
                  operationId: placeOrder
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Order'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Order'
                    '400':
                      description: Invalid Order
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Order'
                    description: order placed for purchasing the pet
                    required: true
              '/store/order/{orderId}':
                get:
                  tags:
                    - store
                  summary: Find purchase order by ID
                  description: >-
                    For valid response try integer IDs with value <= 5 or > 10. Other values
                    will generated exceptions
                  operationId: getOrderById
                  parameters:
                    - name: orderId
                      in: path
                      description: ID of pet that needs to be fetched
                      required: true
                      schema:
                        type: integer
                        format: int64
                        minimum: 1
                        maximum: 5
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Order'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Order'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Order not found
                delete:
                  tags:
                    - store
                  summary: Delete purchase order by ID
                  description: >-
                    For valid response try integer IDs with value < 1000. Anything above
                    1000 or nonintegers will generate API errors
                  operationId: deleteOrder
                  parameters:
                    - name: orderId
                      in: path
                      description: ID of the order that needs to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Order not found
              /user:
                post:
                  tags:
                    - user
                  summary: Create user
                  description: This can only be done by the logged in user.
                  operationId: createUser
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/User'
                    description: Created user object
                    required: true
              /user/createWithArray:
                post:
                  tags:
                    - user
                  summary: Creates list of users with given input array
                  description: ''
                  operationId: createUsersWithArrayInput
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/UserArray'
              /user/createWithList:
                post:
                  tags:
                    - user
                  summary: Creates list of users with given input array
                  description: ''
                  operationId: createUsersWithListInput
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/UserArray'
              /user/login:
                get:
                  tags:
                    - user
                  summary: Logs user into the system
                  description: ''
                  operationId: loginUser
                  parameters:
                    - name: username
                      in: query
                      description: The user name for login
                      required: true
                      schema:
                        type: string
                        pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9.-_]*[a-zA-Z0-9]+$'
                    - name: password
                      in: query
                      description: The password for login in clear text
                      required: true
                      schema:
                        type: string
                  responses:
                    '200':
                      description: successful operation
                      headers:
                        Set-Cookie:
                          description: >-
                            Cookie authentication key for use with the 'api_key'
                            apiKey authentication.
                          schema:
                            type: string
                            example: AUTH_KEY=abcde12345; Path=/; HttpOnly
                        X-Rate-Limit:
                          description: calls per hour allowed by the user
                          schema:
                            type: integer
                            format: int32
                        X-Expires-After:
                          description: date in UTC when token expires
                          schema:
                            type: string
                            format: date-time
                      content:
                        application/xml:
                          schema:
                            type: string
                        application/json:
                          schema:
                            type: string
                    '400':
                      description: Invalid username/password supplied
              /user/logout:
                get:
                  tags:
                    - user
                  summary: Logs out current logged in user session
                  description: ''
                  operationId: logoutUser
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
              '/user/{username}':
                get:
                  tags:
                    - user
                  summary: Get user by user name
                  description: ''
                  operationId: getUserByName
                  parameters:
                    - name: username
                      in: path
                      description: The name that needs to be fetched. Use user1 for testing.
                      required: true
                      schema:
                        type: string
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/User'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/User'
                    '400':
                      description: Invalid username supplied
                    '404':
                      description: User not found
                put:
                  tags:
                    - user
                  summary: Updated user
                  description: This can only be done by the logged in user.
                  operationId: updateUser
                  parameters:
                    - name: username
                      in: path
                      description: name that need to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid user supplied
                    '404':
                      description: User not found
                  security:
                    - api_key: []
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/User'
                    description: Updated user object
                    required: true
                delete:
                  tags:
                    - user
                  summary: Delete user
                  description: This can only be done by the logged in user.
                  operationId: deleteUser
                  parameters:
                    - name: username
                      in: path
                      description: The name that needs to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid username supplied
                    '404':
                      description: User not found
                  security:
                    - api_key: []
            externalDocs:
              description: Find out more about Swagger
              url: 'http://swagger.io'
            components:
              requestBodies:
                UserArray:
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                  description: List of user object
                  required: true
                Pet:
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Pet'
                  description: Pet object that needs to be added to the store
                  required: true
              securitySchemes:
                petstore_auth:
                  type: oauth2
                  flows:
                    implicit:
                      authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
                      scopes:
                        'write:pets': modify pets in your account
                        'read:pets': read your pets
                api_key:
                  type: apiKey
                  name: api_key
                  in: header
              schemas:
                Order:
                  title: Pet Order
                  description: An order for a pets from the pet store
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    petId:
                      type: integer
                      format: int64
                    quantity:
                      type: integer
                      format: int32
                    shipDate:
                      type: string
                      format: date-time
                    status:
                      type: string
                      description: Order Status
                      enum:
                        - placed
                        - approved
                        - delivered
                    complete:
                      type: boolean
                      default: false
                  xml:
                    name: Order
                Category:
                  title: Pet category
                  description: A category for a pet
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                      pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9.-_]*[a-zA-Z0-9]+$'
                  xml:
                    name: Category
                User:
                  title: a User
                  description: A User who is purchasing from the pet store
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    username:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    phone:
                      type: string
                    userStatus:
                      type: integer
                      format: int32
                      description: User Status
                  xml:
                    name: User
                Tag:
                  title: Pet Tag
                  description: A tag for a pet
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                  xml:
                    name: Tag
                Pet:
                  title: a Pet
                  description: A pet for sale in the pet store
                  type: object
                  required:
                    - name
                    - photoUrls
                  properties:
                    id:
                      type: integer
                      format: int64
                    category:
                      $ref: '#/components/schemas/Category'
                    name:
                      type: string
                      example: doggie
                    photoUrls:
                      type: array
                      xml:
                        name: photoUrl
                        wrapped: true
                      items:
                        type: string
                    tags:
                      type: array
                      xml:
                        name: tag
                        wrapped: true
                      items:
                        $ref: '#/components/schemas/Tag'
                    status:
                      type: string
                      description: pet status in the store
                      deprecated: true
                      enum:
                        - available
                        - pending
                        - sold
                  xml:
                    name: Pet
                ApiResponse:
                  title: An uploaded response
                  description: Describes the result of uploading an image resource
                  type: object
                  properties:
                    code:
                      type: integer
                      format: int32
                    type:
                      type: string
                    message:
                      type: string
      required:
        - spec
    PushRequestBody:
      type: object
      properties:
        spec:
          description: JSON or YAML string of your OpenAPI Specification
          example: >
            openapi: 3.0.0

            servers:
              - url: 'http://petstore.swagger.io/v2'
            info:
              version: 1.0.0
              title: OpenAPI Petstore
              license:
                name: Apache-2.0
                url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
            tags:
              - name: pet
                description: Everything about your Pets
              - name: store
                description: Access to Petstore orders
              - name: user
                description: Operations about user
            paths:
              /pet:
                post:
                  tags:
                    - pet
                  summary: Add a new pet to the store
                  description: ''
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '405':
                      description: Invalid input
                  security:
                    - petstore_auth:
                        - 'write:pets'
                      api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/Pet'
                put:
                  tags:
                    - pet
                  summary: Update an existing pet
                  description: ''
                  operationId: updatePet
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Pet not found
                    '405':
                      description: Validation exception
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    $ref: '#/components/requestBodies/Pet'
              /pet/findByStatus:
                get:
                  tags:
                    - pet
                  summary: Finds Pets by status
                  description: Multiple status values can be provided with comma separated strings
                  operationId: findPetsByStatus
                  parameters:
                    - name: status
                      in: query
                      description: Status values that need to be considered for filter
                      required: true
                      style: form
                      explode: false
                      deprecated: true
                      schema:
                        type: array
                        items:
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                          default: available
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid status value
                  security:
                    - petstore_auth:
                        - 'read:pets'
              /pet/findByTags:
                get:
                  tags:
                    - pet
                  summary: Finds Pets by tags
                  description: >-
                    Multiple tags can be provided with comma separated strings. Use tag1,
                    tag2, tag3 for testing.
                  operationId: findPetsByTags
                  parameters:
                    - name: tags
                      in: query
                      description: Tags to filter by
                      required: true
                      style: form
                      explode: false
                      schema:
                        type: array
                        items:
                          type: string
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            type: array
                            items:
                              $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid tag value
                  security:
                    - petstore_auth:
                        - 'read:pets'
                  deprecated: true
              '/pet/{petId}':
                get:
                  tags:
                    - pet
                  summary: Find pet by ID
                  description: Returns a single pet
                  operationId: getPetById
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet to return
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Pet'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Pet'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Pet not found
                  security:
                    - api_key: []
                post:
                  tags:
                    - pet
                  summary: Updates a pet in the store with form data
                  description: ''
                  operationId: updatePetWithForm
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet that needs to be updated
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '405':
                      description: Invalid input
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    content:
                      application/x-www-form-urlencoded:
                        schema:
                          type: object
                          properties:
                            name:
                              description: Updated name of the pet
                              type: string
                            status:
                              description: Updated status of the pet
                              type: string
                delete:
                  tags:
                    - pet
                  summary: Deletes a pet
                  description: ''
                  operationId: deletePet
                  parameters:
                    - name: api_key
                      in: header
                      required: false
                      schema:
                        type: string
                    - name: petId
                      in: path
                      description: Pet id to delete
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '400':
                      description: Invalid pet value
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
              '/pet/{petId}/uploadImage':
                post:
                  tags:
                    - pet
                  summary: uploads an image
                  description: ''
                  operationId: uploadFile
                  parameters:
                    - name: petId
                      in: path
                      description: ID of pet to update
                      required: true
                      schema:
                        type: integer
                        format: int64
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/ApiResponse'
                  security:
                    - petstore_auth:
                        - 'write:pets'
                        - 'read:pets'
                  requestBody:
                    content:
                      multipart/form-data:
                        schema:
                          type: object
                          properties:
                            additionalMetadata:
                              description: Additional data to pass to server
                              type: string
                            file:
                              description: file to upload
                              type: string
                              format: binary
              /store/inventory:
                get:
                  tags:
                    - store
                  summary: Returns pet inventories by status
                  description: Returns a map of status codes to quantities
                  operationId: getInventory
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/json:
                          schema:
                            type: object
                            additionalProperties:
                              type: integer
                              format: int32
                  security:
                    - api_key: []
              /store/order:
                post:
                  tags:
                    - store
                  summary: Place an order for a pet
                  description: ''
                  operationId: placeOrder
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Order'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Order'
                    '400':
                      description: Invalid Order
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Order'
                    description: order placed for purchasing the pet
                    required: true
              '/store/order/{orderId}':
                get:
                  tags:
                    - store
                  summary: Find purchase order by ID
                  description: >-
                    For valid response try integer IDs with value <= 5 or > 10. Other values
                    will generated exceptions
                  operationId: getOrderById
                  parameters:
                    - name: orderId
                      in: path
                      description: ID of pet that needs to be fetched
                      required: true
                      schema:
                        type: integer
                        format: int64
                        minimum: 1
                        maximum: 5
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/Order'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/Order'
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Order not found
                delete:
                  tags:
                    - store
                  summary: Delete purchase order by ID
                  description: >-
                    For valid response try integer IDs with value < 1000. Anything above
                    1000 or nonintegers will generate API errors
                  operationId: deleteOrder
                  parameters:
                    - name: orderId
                      in: path
                      description: ID of the order that needs to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid ID supplied
                    '404':
                      description: Order not found
              /user:
                post:
                  tags:
                    - user
                  summary: Create user
                  description: This can only be done by the logged in user.
                  operationId: createUser
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/User'
                    description: Created user object
                    required: true
              /user/createWithArray:
                post:
                  tags:
                    - user
                  summary: Creates list of users with given input array
                  description: ''
                  operationId: createUsersWithArrayInput
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/UserArray'
              /user/createWithList:
                post:
                  tags:
                    - user
                  summary: Creates list of users with given input array
                  description: ''
                  operationId: createUsersWithListInput
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
                  requestBody:
                    $ref: '#/components/requestBodies/UserArray'
              /user/login:
                get:
                  tags:
                    - user
                  summary: Logs user into the system
                  description: ''
                  operationId: loginUser
                  parameters:
                    - name: username
                      in: query
                      description: The user name for login
                      required: true
                      schema:
                        type: string
                        pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9.-_]*[a-zA-Z0-9]+$'
                    - name: password
                      in: query
                      description: The password for login in clear text
                      required: true
                      schema:
                        type: string
                  responses:
                    '200':
                      description: successful operation
                      headers:
                        Set-Cookie:
                          description: >-
                            Cookie authentication key for use with the 'api_key'
                            apiKey authentication.
                          schema:
                            type: string
                            example: AUTH_KEY=abcde12345; Path=/; HttpOnly
                        X-Rate-Limit:
                          description: calls per hour allowed by the user
                          schema:
                            type: integer
                            format: int32
                        X-Expires-After:
                          description: date in UTC when token expires
                          schema:
                            type: string
                            format: date-time
                      content:
                        application/xml:
                          schema:
                            type: string
                        application/json:
                          schema:
                            type: string
                    '400':
                      description: Invalid username/password supplied
              /user/logout:
                get:
                  tags:
                    - user
                  summary: Logs out current logged in user session
                  description: ''
                  operationId: logoutUser
                  responses:
                    default:
                      description: successful operation
                  security:
                    - api_key: []
              '/user/{username}':
                get:
                  tags:
                    - user
                  summary: Get user by user name
                  description: ''
                  operationId: getUserByName
                  parameters:
                    - name: username
                      in: path
                      description: The name that needs to be fetched. Use user1 for testing.
                      required: true
                      schema:
                        type: string
                  responses:
                    '200':
                      description: successful operation
                      content:
                        application/xml:
                          schema:
                            $ref: '#/components/schemas/User'
                        application/json:
                          schema:
                            $ref: '#/components/schemas/User'
                    '400':
                      description: Invalid username supplied
                    '404':
                      description: User not found
                put:
                  tags:
                    - user
                  summary: Updated user
                  description: This can only be done by the logged in user.
                  operationId: updateUser
                  parameters:
                    - name: username
                      in: path
                      description: name that need to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid user supplied
                    '404':
                      description: User not found
                  security:
                    - api_key: []
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/User'
                    description: Updated user object
                    required: true
                delete:
                  tags:
                    - user
                  summary: Delete user
                  description: This can only be done by the logged in user.
                  operationId: deleteUser
                  parameters:
                    - name: username
                      in: path
                      description: The name that needs to be deleted
                      required: true
                      schema:
                        type: string
                  responses:
                    '400':
                      description: Invalid username supplied
                    '404':
                      description: User not found
                  security:
                    - api_key: []
            externalDocs:
              description: Find out more about Swagger
              url: 'http://swagger.io'
            components:
              requestBodies:
                UserArray:
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                  description: List of user object
                  required: true
                Pet:
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Pet'
                  description: Pet object that needs to be added to the store
                  required: true
              securitySchemes:
                petstore_auth:
                  type: oauth2
                  flows:
                    implicit:
                      authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
                      scopes:
                        'write:pets': modify pets in your account
                        'read:pets': read your pets
                api_key:
                  type: apiKey
                  name: api_key
                  in: header
              schemas:
                Order:
                  title: Pet Order
                  description: An order for a pets from the pet store
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    petId:
                      type: integer
                      format: int64
                    quantity:
                      type: integer
                      format: int32
                    shipDate:
                      type: string
                      format: date-time
                    status:
                      type: string
                      description: Order Status
                      enum:
                        - placed
                        - approved
                        - delivered
                    complete:
                      type: boolean
                      default: false
                  xml:
                    name: Order
                Category:
                  title: Pet category
                  description: A category for a pet
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                      pattern: '^[a-zA-Z0-9]+[a-zA-Z0-9.-_]*[a-zA-Z0-9]+$'
                  xml:
                    name: Category
                User:
                  title: a User
                  description: A User who is purchasing from the pet store
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    username:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    phone:
                      type: string
                    userStatus:
                      type: integer
                      format: int32
                      description: User Status
                  xml:
                    name: User
                Tag:
                  title: Pet Tag
                  description: A tag for a pet
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                  xml:
                    name: Tag
                Pet:
                  title: a Pet
                  description: A pet for sale in the pet store
                  type: object
                  required:
                    - name
                    - photoUrls
                  properties:
                    id:
                      type: integer
                      format: int64
                    category:
                      $ref: '#/components/schemas/Category'
                    name:
                      type: string
                      example: doggie
                    photoUrls:
                      type: array
                      xml:
                        name: photoUrl
                        wrapped: true
                      items:
                        type: string
                    tags:
                      type: array
                      xml:
                        name: tag
                        wrapped: true
                      items:
                        $ref: '#/components/schemas/Tag'
                    status:
                      type: string
                      description: pet status in the store
                      deprecated: true
                      enum:
                        - available
                        - pending
                        - sold
                  xml:
                    name: Pet
                ApiResponse:
                  title: An uploaded response
                  description: Describes the result of uploading an image resource
                  type: object
                  properties:
                    code:
                      type: integer
                      format: int32
                    type:
                      type: string
                    message:
                      type: string
        gitHub:
          type: object
          properties:
            owner:
              description: The account owner of the repository
              example: konfig-dev
            repo:
              description: The name of the repository
              example: acme-sdks
          required:
            - owner
            - repo
      required:
        - spec
        - gitHub
    LintResponseBody:
      type: object
      properties:
        diagnosis:
          type: array
          items:
            description: Information regarding an error or warning found in your OpenAPI
              Spec.
        passed:
          example: false
          description: "`true` if no warnings or errors were found while linting else
            `false`"
      required:
        - diagnosis
        - passed
    PushResponseBody:
      anyOf:
        - type: object
          properties:
            status:
              type: string
              enum:
                - created-pr
            link:
              type: string
          required:
            - status
            - link
        - type: object
          properties:
            status:
              type: string
              enum:
                - no-diff
          required:
            - status
  parameters: {}
paths:
  /generate:
    post:
      description: Generate SDKs and receive signed S3 download URLs for the generated
        packages
      summary: Generate SDKs
      operationId: SDK_generate
      tags:
        - SDK
      security:
        - authorization: []
          session: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateRequestBody"
      responses:
        "200":
          description: Generated SDKs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateResponseBody"
  /push:
    post:
      description: Push your OpenAPI Specification to Konfig to trigger SDK generation
        for a specified repository
      summary: Push your OpenAPI Specification to Konfig
      operationId: Specifications_push
      tags:
        - Specifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushRequestBody"
      responses:
        "200":
          description: Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PushResponseBody"
  /lint:
    post:
      description: Lint your OpenAPI Specification to ensure generation of high
        quality SDKs with Konfig
      summary: Lint your OpenAPI Specification
      operationId: Linting_lint
      tags:
        - Linting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LintRequestBody"
        required: true
      responses:
        "200":
          description: Diagnosis information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LintResponseBody"
